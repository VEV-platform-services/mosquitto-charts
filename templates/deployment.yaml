apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}
  labels:
    app: {{.Values.name}}
spec:
  selector:
    matchLabels:
      app: {{.Values.name}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      containers:
        - image: eclipse-mosquitto:latest
          name: mosquitto
          ports:
            - containerPort: 1883
            - containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: 1883
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 1883
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: mosquitto-persistent-storage
              mountPath: /mosquitto/data
            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
        - name: health-check-sidecar
          image: python:3.9-slim
          command: [ "python3", "-c", "from http.server import BaseHTTPRequestHandler, HTTPServer; \
class Handler(BaseHTTPRequestHandler): \
    def do_GET(self): \
        if self.path == '/health': \
            self.send_response(200); \
            self.end_headers(); \
            self.wfile.write(b'OK'); \
        else: \
            self.send_response(404); \
            self.end_headers(); \
httpd = HTTPServer(('0.0.0.0',80), Handler); httpd.serve_forever()" ]
          ports:
            - containerPort: 80
      volumes:
        - name: {{.Values.name}}-persistent-storage
          persistentVolumeClaim:
            claimName: mq-pv-claim
        - name: {{.Values.name}}-config
          configMap:
            name: {{.Values.name}}-config

